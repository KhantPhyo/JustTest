cmatrix

echo "                                                                                                              
                                            ...                                                      
                         ..::--==--:.     :-----..:--=--:::.                                         
                       :--------======-: .--------===--------:.                                      
                     :------------=======::------===::----------.                                    
                    --------:.....:=====-. -----==-. . ..::------:                                   
                   -------.         :=-. .=======:         .------:                                  
                  .------.              :=======.           .------                                  
                  .------              -======-              ------.                                 
                  .------.           :=======:              .------                                  
                   -------.         -======-  .-=:         .------:                                  
                    --------:.....:=======: .======. ....:-------:                                   
                     :------------======-.  :=======::----------.                                    
                       :--------======-.      :-=====--------:.                                      
                          .::---=--:.            .:--=--:::.                                         "  | 
lolcat
figlet -c -k -f slant ">> Cross net <<" | lolcat
#figlet -c -k -f larry " Cross Net " | lolcat
echo " Cross Net Co,.ltd is one the best place for IT solutions and Tranings
 Address         : Corner of 59A x 106, Chan Mya TharZi Township. Mandalay 
 Contact Number  : +959 753 131 804
 Mail            : info@crossnetmm.com
 Web             : https://www.crossnetmm.com
 Youtube         : https://www.youtube.com/c/CrossNetLearningHub " | lolcat
echo " "
echo " "
alias python3="/usr/bin/python3"
# -- INIT ----------------------------------------------------------------------
#
#source "/etc/zsh_completion.d/kus"
#source <(minikube completion zsh)

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# -- ZINIT ---------------------------------------------------------------------

if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
  command git clone https://github.com/zdharma-continuum/zinit "$HOME/.zinit/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# -- PLUGINS -------------------------------------------------------------------

zinit ice depth=1
zinit light romkatv/powerlevel10k

zinit wait lucid light-mode for \
  ver="dev" \
  atload'bindkey "^u" dotbare-transform;
  bindkey "^d" dotbare-fedit' \
    kazhala/dotbare \
  kazhala/bmux \
  kazhala/dump-cli \
  https://github.com/kazhala/scripts/blob/master/shell/fbookmark \
  https://raw.githubusercontent.com/aws/aws-cli/develop/bin/aws_zsh_completer.sh \
  atload'bindkey -M vicmd "k" history-substring-search-up;
  bindkey -M vicmd "j" history-substring-search-down' \
    zsh-users/zsh-history-substring-search \
  atload'_zsh_autosuggest_start;
  unset ZSH_AUTOSUGGEST_USE_ASYNC;
  bindkey -v "^ " autosuggest-accept' \
    zsh-users/zsh-autosuggestions \
  atinit'ZINIT[COMPINIT_OPTS]=-C;
  zicompinit;
  zicdreplay;
  _dotbare_completion_cmd;
  complete -o nospace -C "$(which terraform)" terraform;
  eval "$(register-python-argcomplete pipx)"' \
  atload"FAST_HIGHLIGHT[chroma-man]=" \
    zdharma-continuum/fast-syntax-highlighting

autoload -Uz compinit
compinit


# -- SETTINGS -----------------------------------------------------------------

# history
HISTSIZE=50000
SAVEHIST=10000
HISTFILE=~/.cache/zsh/history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt share_history

# completion
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.cache/zsh/completion
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' \
  max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'
zstyle ':completion:*' menu select
zstyle ':completion:*' special-dirs true
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
expand-or-complete-with-dots() {
  [[ -n "$terminfo[rmam]" && -n "$terminfo[smam]" ]] && echoti rmam
  print -Pn "%{%F{red}......%f%}"
  [[ -n "$terminfo[rmam]" && -n "$terminfo[smam]" ]] && echoti smam

  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "^I" expand-or-complete-with-dots
zmodload zsh/complist
LISTMAX=9999

# edit current line in vim
autoload -Uz edit-command-line
zle -N edit-command-line

# comments and process sub in propmt
setopt interactive_comments
setopt prompt_subst

# directory stack
setopt pushd_ignore_dups
setopt auto_pushd
setopt pushdminus

# misc
setopt nobeep
setopt ignoreeof

# -- PATH ----------------------------------------------------------------------

export PATH="$HOME/bin:/usr/local/bin:$HOME/.local/bin:$PATH"
export PATH="$HOME/Programming/scripts/shell:$PATH"
export PATH="${XDG_DATA_HOME:-$HOME/.local/share}/cargo/bin:$PATH"
export PATH="$PATH:/opt/homebrew/bin/ffmpeg"
# -- ALIASES -------------------------------------------------------------------

alias v="nvim"
alias vimf="nvim '+Dashboard | FloatermNew vifm'"
alias k="kubectl"
alias m="minikube"
alias py="python3"
alias tree="tree -I '.git|node_modules|bower_components|.DS_Store|build' -L 1"
alias ag="ag -p ~/.ignore"
alias lg="lazygit"
alias ..="cd .."
alias mv="mv -v"
alias cp="cp -v"
alias rm="rm -v"
alias grep="grep --color=auto"
alias fs="bmux"
alias tf="terraform"
alias ls='exa --icons'
alias ll='exa -l --icons'
alias llt='exa -l -T -L 1 --icons'
alias lt='exa -T -L 1'
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias mydns="nmcli device show wlp58s0 | grep IP4.DNS"
alias a2dp="pactl set-card-profile bluez_card.94_DB_56_A7_A2_1F a2dp-sink-sbc_xq"
alias g2dp="pacmd set-card-profile bluez_card.6C_DD_BC_1F_E6_36 a2dp_sink"
alias bat="upower -i /org/freedesktop/UPower/devices/battery_BAT0"
alias a2hd="pactl set-card-profile bluez_card.94_DB_56_A7_A2_1F headset-head-unit-msbc"
alias g2hd="pacmd set-card-profile bluez_card.6C_DD_BC_1F_E6_36 handsfree_head_unit"
alias cybsg="sudo cyberghostvpn --country-code SG --city Singapore --server singapore-s405-i06 --connect"
alias cybs="sudo cyberghostvpn --stop"
alias cybth="sudo cyberghostvpn --Country-code TH --city Bangkok --server bangkok-s401-i13 --connect"
alias cybjp="sudo cyberghostvpn --country-code JP --city Tokyo --server tokyo-s408-i22 --connect"
alias cybid="sudo cyberghostvpn --country-code ID --city Jakarta --server jakarta-s401-i06 --connect"
alias cybgb="sudo cyberghostvpn --country-code GB --city London --server london-s424-i26 --connect"
alias cyb="cyberghostvpn"
alias bat="upower -i /org/freedesktop/UPower/devices/battery_BAT0"
alias docker-arch="docker context use arch-labs"
alias docker-de="docker context use default"
alias spt="speedtest --server 23102"
alias btop="bashtop"
alias vgdocker="export DOCKER_HOST=tcp://mgmtvgmm:4004 DOCKER_TLS_VERIFY=1 DOCKER_CERT_PATH=~/.docker/mgmtvgmm"
alias apti="sudo apt-fast -y install"
alias apd="sudo apt-fast update"
alias apg="sudo apt-fast -y upgrade"
alias apdg="sudo apt-fast -y dist-upgrade"
alias sudo="sudo "
alias vgvpnc="sudo systemctl start strongswan-starter.service"
alias vgvpnd="sudo systemctl stop strongswan-starter.service"
alias vgvpns="sudo systemctl status strongswan-starter.service"
alias lx-start="sudo -E PATH=${PATH} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} $(go env GOPATH)/bin/lxd --group sudo > /dev/null &"
alias awk=gawk

# -- JAVA Alias ------------------------------------------------

export JAVA_HOME=/usr/lib/jvm/java-19-openjdk-amd64
export PATH_TO_FX=/usr/lib/jvm/javafx-sdk-19/lib/
alias j="java"
alias jc="javac"
alias jfx="java -p $PATH_TO_FX --add-modules=ALL-MODULE-PATH"
alias jfxc="javac -p $PATH_TO_FX --add-modules=ALL-MODULE-PATH"

# -- SYSTEM ENV ----------------------------------------------------------------

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export EDITOR=nvim
export TERM="xterm-256color"
export COLORTERM="truecolor"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# -- MISC ----------------------------------------------------------------------

if [[ ${OSTYPE} =~ "linux-gnu" ]] && [[ $(lsb_release -ds) =~ "Arch Linux" ]]; then
  if [[ "${WSL_DISTRO_NAME}" =~ Ubuntu-.* ]]; then
    export OS_DISTRO="WSL_UBUNTU"
  else
    export OS_DISTRO="Arch Linux"
  fi
  #eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  export PATH="$HOME/.yarn/bin:$PATH"
elif [[ ${OSTYPE} =~ "darwin" ]]; then
  export OS_DISTRO="MACOS"
fi

export GRIPHOME="${XDG_CONFIG_HOME:-$HOME/.config}/grip"
export FBOOKMARK_LOCATION="${XDG_CONFIG_HOME:-$HOME/.config}/fbookmark"
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export RUSTUP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rustup"
export LS_COLORS="$(vivid generate nord)"

# -- BMUX ----------------------------------------------------------------------

export BMUX_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/bmux"
export BMUX_ACTIVE_SYMBOL=""
export BMUX_INACTIVE_SYMBOL=""
export BMUX_ACTIVE_COLOR="32"
export BMUX_TREE_SYMBOL="﬌"

export BMUX_3_WEB='05c6,210x63,0,0{150x63,0,0,56,59x63,151,0[59x31,151,0,57,59x31,151,32,58]}'
export BMUX_3_VS='3807,210x63,0,0[210x45,0,0,1,210x17,0,46{105x17,0,46,3,104x17,106,46,4}]'
export BMUX_CODE='578a,239x62,0,0[239x45,0,0,30,239x16,0,46,31]'

# -- DUMP ----------------------------------------------------------------------

export DUMP_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/dump/trash"
export DUMP_LOG="${XDG_DATA_HOME:-$HOME/.local/share}/dump/log"

# -- LESS ----------------------------------------------------------------------

export LESSHISTFILE=-
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

# -- DOTBARE -------------------------------------------------------------------

export DOTBARE_DIR="$HOME/.cfg/"
export DOTBARE_TREE="$HOME"
export DOTBARE_BACKUP="${XDG_DATA_HOME:-$HOME/.local/share}/dotbare"
export DOTBARE_FZF_DEFAULT_OPTS="--preview-window=right:65%"
export DOTBARE_KEY="
  --bind=alt-a:toggle-all
  --bind=alt-w:jump
  --bind=alt-0:top
  --bind=alt-s:toggle-sort
  --bind=alt-t:toggle-preview
"

# -- FZF ----------------------------------------------------------------------

_gen_fzf_default_opts() {
local color00='#2E3440'
local color01='#3B4252'
local color02='#434C5E'
local color03='#4C566A'
local color04='#D8DEE9'
local color05='#E5E9F0'
local color06='#ECEFF4'
local color07='#8FBCBB'
local color08='#BF616A'
local color09='#D08770'
local color0A='#EBCB8B'
local color0B='#A3BE8C'
local color0C='#88C0D0'
local color0D='#81A1C1'
local color0E='#B48EAD'
local color0F='#5E81AC'

export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
  --color=bg+:$color00,bg:$color00,spinner:$color0C,hl:$color0D
  --color=fg:$color04,header:$color0D,info:$color0A,pointer:$color0C
  --color=marker:$color0C,fg+:$color06,prompt:$color0A,hl+:$color0D
  --height 100% --layout=reverse --border --cycle --info=inline
  --bind=ctrl-d:preview-page-down
  --bind=ctrl-u:preview-page-up
"
}

_gen_fzf_default_opts

export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_ALT_C_COMMAND="fd --type d"
export FZF_ALT_C_OPTS="--preview 'tree -L 1 -C --dirsfirst {} | head -200'"

# Use fd to generate auto completion
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# activate fzf keybindings
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh
export FZF_COMPLETION_TRIGGER=''
export FZF_PREVIEW_COMMAND='cat {}'

# -- FUNCTIONS -----------------------------------------------------------------

take () {
  mkdir -p $@ && cd ${@:$#}
}

_run_fm() {
  fm
  BUFFER=
  zle accept-line
}

_run_ffd_d() {
  local result
  result="$(ffd --hidden --dir)"
  [[ -d "${result}" ]] && \
    cd "${result}"
  BUFFER=
  zle accept-line
}

# -- KEYBINDING ----------------------------------------------------------------

bindkey -v

# ci", ci', ci`, di", etc
autoload -U select-quoted
zle -N select-quoted
for m in visual viopp; do
  for c in {a,i}{\',\",\`}; do
    bindkey -M $m $c select-quoted
  done
done

# ci{, ci(, ci<, di{, etc
autoload -U select-bracketed
zle -N select-bracketed
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
done

bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect '^o' accept-and-infer-next-history

bindkey "^p" up-line-or-history
bindkey "^n" down-line-or-history

bindkey -M vicmd v edit-command-line
bindkey "^?" backward-delete-char

#bindkey '^T' fzf-completion
#bindkey '^I' $fzf_default_completion

zle -N fm-invoke _run_fm
bindkey "^g" fm-invoke

zle -N ffd-d-invoke _run_ffd_d
bindkey "\ed" ffd-d-invoke

# -- FINAL ---------------------------------------------------------------------

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

source ~/.zsh/zsh-peco-history/zsh-peco-history.zsh

# -- PECO-GHQ ------------------------------------------------------------------
function peco-src () {
    local selected_dir=$(ghq list --full-path | peco --query "$LBUFFER")
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N peco-src
bindkey '^]' peco-src

zinit load agkozak/zsh-z

# -- pyenv --------------------------------------------------------------------
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv virtualenv-init -)"

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# -- DotFile Manager -----------------------------------------------------------
#zinit light kazhala/dotbare
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
alias c='config'
# -- DotFile Manager END -------------------------------------------------------
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform

export PATH=$PATH:/usr/local/go/bin
export PATH="${PATH}:$(go env GOPATH)/bin"
export LD_LIBRARY_PATH="$(go env GOPATH)/deps/dqlite/.libs/:$(go env GOPATH)/deps/raft/.libs/:${LD_LIBRARY_PATH}"
export CGO_CFLAGS="-I/home/nieh/go/deps/raft/include/ -I/home/nieh/go/deps/dqlite/include/"
export CGO_LDFLAGS="-L/home/nieh/go/deps/raft/.libs -L/home/nieh/go/deps/dqlite/.libs/"
export LD_LIBRARY_PATH="/home/nieh/go/deps/raft/.libs/:/home/nieh/go/deps/dqlite/.libs/"
export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

### End of Zinit's installer chunk
alias console="dmesg | egrep -i --color 'serial|ttyS'"
alias consoleconnectconfig="sudo minicom -s "
alias ccc="sudo minicom -s "
alias consoleconnect="sudo minicom"
alias cc="sudo minicom"

